#Processed by Id: cwm.py,v 1.197 2007/12/13 15:38:39 syosi Exp 
        #    using base file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582
        
#  Notation3 generation by
#       notation3.py,v 1.200 2007/12/11 21:18:08 syosi Exp

#   Base was: file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582
     @prefix : <http://www.w3.org/2000/10/swap/reason#> .
    @prefix con: <http://www.w3.org/2000/10/swap/pim/contact#> .
    @prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
    @prefix http: <http://www.w3.org/2011/http#> .
    @prefix log: <http://www.w3.org/2000/10/swap/log#> .
    @prefix meteo: <http://purl.org/ns/meteo#> .
    @prefix n3: <http://www.w3.org/2004/06/rei#> .
    @prefix resto: <http://example.org/restaurant#> .
    @prefix run: <#> .
    @prefix vocab: <http://example.org/vocab#> .
    
     @forSome run:_g0,
                run:_g1,
                run:_g2 .
      [      a :Inference,
                    :Proof;
             :binding  [
                 :boundTo  [
                     a :Existential;
                     n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g80" ];
                 :variable  [
                     n3:nodeId "file:///Users/ruben/Desktop/resto/restoG.n3#restaurant" ] ],
                     [
                 :boundTo  [
                     a :Existential;
                     n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g88" ];
                 :variable  [
                     n3:nodeId "file:///Users/ruben/Desktop/resto/restoG.n3#reservation" ] ],
                     [
                 :boundTo  [
                     a :Existential;
                     n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g89" ];
                 :variable  [
                     n3:nodeId "file:///Users/ruben/Desktop/resto/restoG.n3#place" ] ],
                     [
                 :boundTo "12/12/12";
                 :variable  [
                     n3:nodeId "file:///Users/ruben/Desktop/resto/restoG.n3#date" ] ],
                     [
                 :boundTo  [
                     a :Existential;
                     n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g81" ];
                 :variable  [
                     n3:nodeId "file:///Users/ruben/Desktop/resto/restoG.n3#outside" ] ];
             :evidence  (
             [
                     a :Extraction;
                     :because  [
                         a :Inference;
                         :binding  [
                             :boundTo "12/12/12";
                             :variable  [
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#date" ] ],
                                 [
                             :boundTo  [
                                 a :Existential;
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g84" ];
                             :variable  [
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#place" ] ],
                                 [
                             :boundTo  [
                                 a :Existential;
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g83" ];
                             :variable  [
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#reservations" ] ],
                                 [
                             :boundTo  [
                                 a :Existential;
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g81" ];
                             :variable  [
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#outside" ] ],
                                 [
                             :boundTo  [
                                 a :Existential;
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g80" ];
                             :variable  [
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#restaurant" ] ],
                                 [
                             :boundTo  [
                                 n3:uri "http://example.org/vocab#RestAppointment" ];
                             :variable  [
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#day" ] ];
                         :evidence  (
                         [
                                 a :Extraction;
                                 :because run:_g1;
                                 :gives {vocab:RestAppointment     resto:hasDate "12/12/12" .
                                } ]
                         [
                                 a :Extraction;
                                 :because  [
                                     a :Inference;
                                     :binding  [
                                         :boundTo  [
                                             n3:uri "http://example.org/vocab#RestAppointment" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#appointment" ] ],
                                             [
                                         :boundTo  [
                                             a :Existential;
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g66" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#lat" ] ],
                                             [
                                         :boundTo "<#myAppointments>";
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#appointmentList" ] ],
                                             [
                                         :boundTo  [
                                             a :Existential;
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g76" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#pressure" ] ],
                                             [
                                         :boundTo  [
                                             a :Existential;
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g72" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#temp" ] ],
                                             [
                                         :boundTo  [
                                             a :Existential;
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g71" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#temperature" ] ],
                                             [
                                         :boundTo "12/12/12";
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#date" ] ],
                                             [
                                         :boundTo  [
                                             a :Existential;
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g67" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#long" ] ],
                                             [
                                         :boundTo  [
                                             a :Existential;
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g77" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#pres" ] ],
                                             [
                                         :boundTo  [
                                             a :Existential;
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g65" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#location" ] ];
                                     :evidence  (
                                     [
                                             a :Extraction;
                                             :because run:_g1;
                                             :gives {vocab:RestAppointment     resto:hasDate "12/12/12";
                                                 resto:isOn "<#myAppointments>" .
                                            } ]
                                     [
                                             a :Extraction;
                                             :because  [
                                                 a :Inference;
                                                 :binding  [
                                                     :boundTo  [
                                                         a :Existential;
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g67" ];
                                                     :variable  [
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#long" ] ],
                                                         [
                                                     :boundTo  [
                                                         a :Existential;
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g65" ];
                                                     :variable  [
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#location" ] ],
                                                         [
                                                     :boundTo  [
                                                         a :Existential;
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g66" ];
                                                     :variable  [
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#lat" ] ];
                                                 :evidence  (
                                                 [
                                                         a :Extraction;
                                                         :because run:_g2;
                                                         :gives { @forSome run:_g3,
                                                                    run:_g4,
                                                                    run:_g5 .
                                                        run:_g3     geo:lat run:_g4;
                                                             geo:long run:_g5 .
                                                        } ] );
                                                 :rule  [
                                                     a :Extraction;
                                                     :because run:_g1;
                                                     :gives { @forAll <resto.n3#lat>,
                                                                <resto.n3#location>,
                                                                <resto.n3#long> .
                                                    {
                                                        <resto.n3#location>     geo:lat <resto.n3#lat>;
                                                             geo:long <resto.n3#long> .
                                                        
                                                        }     log:implies { @forSome run:_g6 .
                                                          [      http:methodName "GET";
                                                                 http:requestURI  (
                                                                "CurrentTemperature?lat="
                                                                <resto.n3#lat>
                                                                "&long="
                                                                <resto.n3#long> );
                                                                 http:resp  [
                                                                     http:body run:_g6 ] ].
                                                        <resto.n3#location>     meteo:temperature  [
                                                                 meteo:celsius run:_g6 ] .
                                                        } .
                                                    } ] ];
                                             :gives { @forSome run:_g3 .
                                            run:_g3     meteo:temperature  [
                                                     meteo:celsius  [
                                                     ] ] .
                                            } ]
                                     [
                                             a :Extraction;
                                             :because run:_g2;
                                             :gives { @forSome run:_g3,
                                                        run:_g4,
                                                        run:_g5 .
                                            run:_g3     geo:lat run:_g4;
                                                 geo:long run:_g5 .
                                            } ]
                                     [
                                             a :Extraction;
                                             :because  [
                                                 a :Inference;
                                                 :binding  [
                                                     :boundTo  [
                                                         a :Existential;
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g67" ];
                                                     :variable  [
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#long" ] ],
                                                         [
                                                     :boundTo  [
                                                         a :Existential;
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g65" ];
                                                     :variable  [
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#location" ] ],
                                                         [
                                                     :boundTo  [
                                                         a :Existential;
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g66" ];
                                                     :variable  [
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#lat" ] ];
                                                 :evidence  (
                                                 [
                                                         a :Extraction;
                                                         :because run:_g2;
                                                         :gives { @forSome run:_g3,
                                                                    run:_g4,
                                                                    run:_g5 .
                                                        run:_g3     geo:lat run:_g4;
                                                             geo:long run:_g5 .
                                                        } ] );
                                                 :rule  [
                                                     a :Extraction;
                                                     :because run:_g1;
                                                     :gives { @forAll <resto.n3#lat>,
                                                                <resto.n3#location>,
                                                                <resto.n3#long> .
                                                    {
                                                        <resto.n3#location>     geo:lat <resto.n3#lat>;
                                                             geo:long <resto.n3#long> .
                                                        
                                                        }     log:implies { @forSome run:_g7 .
                                                          [      http:methodName "GET";
                                                                 http:requestURI  (
                                                                "CurrentPressure?lat="
                                                                <resto.n3#lat>
                                                                "&long="
                                                                <resto.n3#long> );
                                                                 http:resp  [
                                                                     http:body run:_g7 ] ].
                                                        <resto.n3#location>     meteo:pressure  [
                                                                 meteo:millibar run:_g7 ] .
                                                        } .
                                                    } ] ];
                                             :gives { @forSome run:_g3 .
                                            run:_g3     meteo:pressure  [
                                                     meteo:millibar  [
                                                     ] ] .
                                            } ] );
                                     :rule  [
                                         a :Extraction;
                                         :because run:_g1;
                                         :gives { @forAll <resto.n3#appointment>,
                                                    <resto.n3#appointmentList>,
                                                    <resto.n3#date>,
                                                    <resto.n3#lat>,
                                                    <resto.n3#location>,
                                                    <resto.n3#long>,
                                                    <resto.n3#pres>,
                                                    <resto.n3#pressure>,
                                                    <resto.n3#temp>,
                                                    <resto.n3#temperature> .
                                        {
                                            <resto.n3#appointment>     resto:hasDate <resto.n3#date>;
                                                 resto:isOn <resto.n3#appointmentList> .
                                            <resto.n3#location>     meteo:pressure <resto.n3#pres>;
                                                 meteo:temperature <resto.n3#temp>;
                                                 geo:lat <resto.n3#lat>;
                                                 geo:long <resto.n3#long> .
                                            <resto.n3#pres>     meteo:millibar <resto.n3#pressure> .
                                            <resto.n3#temp>     meteo:celsius <resto.n3#temperature> .
                                            
                                            }     log:implies { @forSome run:_g8,
                                                        run:_g9 .
                                              [      http:body  (
                                                    <resto.n3#appointment>
                                                    run:_g8
                                                    run:_g9 );
                                                     http:methodName "POST";
                                                     http:requestURI <resto.n3#appointmentList>;
                                                     http:resp  [
                                                         http:body <resto.n3#appointment> ] ].
                                            run:_g8     a resto:Restaurant;
                                                 resto:reservationList  [
                                                 ] .
                                              [      resto:isOutside run:_g9 ].
                                            <resto.n3#appointment>     resto:isAt run:_g8 .
                                            } .
                                        } ] ];
                                 :gives { @forSome run:_g10,
                                            run:_g11 .
                                run:_g10     resto:reservationList  [
                                     ] .
                                  [      resto:isOutside run:_g11 ].
                                } ] );
                         :rule  [
                             a :Extraction;
                             :because run:_g1;
                             :gives { @forAll <resto.n3#date>,
                                        <resto.n3#day>,
                                        <resto.n3#outside>,
                                        <resto.n3#place>,
                                        <resto.n3#reservations>,
                                        <resto.n3#restaurant> .
                            {
                                <resto.n3#day>     resto:hasDate <resto.n3#date> .
                                <resto.n3#place>     resto:isOutside <resto.n3#outside> .
                                <resto.n3#restaurant>     resto:reservationList <resto.n3#reservations> .
                                
                                }     log:implies { @forSome run:_g12 .
                                  [      http:body  (
                                        <resto.n3#date>
                                        <resto.n3#outside> );
                                         http:methodName "POST";
                                         http:requestURI <resto.n3#reservations>;
                                         http:resp  [
                                             http:body run:_g12 ] ].
                                run:_g12     resto:onDate <resto.n3#date>;
                                     resto:place  [
                                         resto:isOutside <resto.n3#outside> ] .
                                <resto.n3#restaurant>     resto:hasReservation run:_g12 .
                                } .
                            } ] ];
                     :gives { @forSome run:_g10,
                                run:_g11,
                                run:_g13,
                                run:_g14 .
                    run:_g10     resto:hasReservation run:_g13 .
                    run:_g13     resto:onDate "12/12/12";
                         resto:place run:_g14 .
                    run:_g14     resto:isOutside run:_g11 .
                    } ] );
             :gives { @forSome run:_g10,
                        run:_g11,
                        run:_g13,
                        run:_g14 .
            run:_g10     resto:hasReservation run:_g13 .
            run:_g13     resto:onDate "12/12/12";
                 resto:place run:_g14 .
            run:_g14     resto:isOutside run:_g11 .
            };
             :rule  [
                 a :Extraction;
                 :because  [
                     a :Parsing;
                     :because run:_g0;
                     :source <restoG.n3> ];
                 :gives { @forAll <restoG.n3#date>,
                            <restoG.n3#outside>,
                            <restoG.n3#place>,
                            <restoG.n3#reservation>,
                            <restoG.n3#restaurant> .
                {
                    <restoG.n3#place>     resto:isOutside <restoG.n3#outside> .
                    <restoG.n3#reservation>     resto:onDate <restoG.n3#date>;
                         resto:place <restoG.n3#place> .
                    <restoG.n3#restaurant>     resto:hasReservation <restoG.n3#reservation> .
                    
                    }     log:implies {<restoG.n3#place>     resto:isOutside <restoG.n3#outside> .
                    <restoG.n3#reservation>     resto:onDate <restoG.n3#date>;
                         resto:place <restoG.n3#place> .
                    <restoG.n3#restaurant>     resto:hasReservation <restoG.n3#reservation> .
                    } .
                } ] ].
    
    run:_g0     a :CommandLine;
         :args "['/Users/ruben/Library/Tools/cwm', 'resto.n3', '--think', '--filter=restoG.n3', '--why']" .
    
    run:_g1     a :Parsing;
         :because run:_g0;
         :source <resto.n3> .
    
    run:_g2     a :Inference;
         :binding  [
             :boundTo  [
                 a :Existential;
                 n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414332415.120823p3582#_g61" ];
             :variable  [
                 n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#address" ] ];
         :evidence  (
         [
                 a :Extraction;
                 :because  [
                     a :Inference;
                     :binding  [
                         :boundTo  [
                             n3:uri "http://example.org/vocab#Areeb" ];
                         :variable  [
                             n3:nodeId "file:///Users/ruben/Desktop/resto/resto.n3#user" ] ];
                     :evidence  (
                     [
                             a :Extraction;
                             :because run:_g1;
                             :gives {vocab:Areeb     a <http://xmlns.com/foaf/0.1/Person> .
                            } ] );
                     :rule  [
                         a :Extraction;
                         :because run:_g1;
                         :gives { @forAll <resto.n3#user> .
                        {
                            <resto.n3#user>     a <http://xmlns.com/foaf/0.1/Person> .
                            
                            }     log:implies { @forSome run:_g15 .
                              [      http:methodName "GET";
                                     http:requestURI  (
                                    <resto.n3#user> );
                                     http:resp  [
                                         http:body run:_g15 ] ].
                            run:_g15     a con:Address .
                            <resto.n3#user>     <http://xmlns.com/foaf/0.1/based_near> run:_g15 .
                            } .
                        } ] ];
                 :gives {
                  [      a con:Address ].
                } ] );
         :rule  [
             a :Extraction;
             :because run:_g1;
             :gives { @forAll <resto.n3#address> .
            {
                <resto.n3#address>     a con:Address .
                
                }     log:implies {
                  [      http:methodName "GET";
                         http:requestURI  (
                        "?location= "
                        <resto.n3#address> );
                         http:resp  [
                             http:body  [
                                 a geo:Point;
                                 geo:lat  [
                                 ];
                                 geo:long  [
                                 ] ] ] ].
                } .
            } ] .
    
#ENDS
