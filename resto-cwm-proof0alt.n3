#Processed by Id: cwm.py,v 1.197 2007/12/13 15:38:39 syosi Exp 
        #    using base file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365
        
#  Notation3 generation by
#       notation3.py,v 1.200 2007/12/11 21:18:08 syosi Exp

#   Base was: file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365
     @prefix : <http://www.w3.org/2000/10/swap/reason#> .
    @prefix con: <http://www.w3.org/2000/10/swap/pim/contact#> .
    @prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
    @prefix http: <http://www.w3.org/2011/http#> .
    @prefix log: <http://www.w3.org/2000/10/swap/log#> .
    @prefix meteo: <http://purl.org/ns/meteo#> .
    @prefix n3: <http://www.w3.org/2004/06/rei#> .
    @prefix resto: <http://example.org/restaurant#> .
    @prefix run: <#> .
    @prefix se: <services1.n3#> .
    @prefix vocab: <http://example.org/vocab#> .
    
     @forSome run:_g0,
                run:_g1,
                run:_g2,
                run:_g3 .
      [      a :Inference,
                    :Proof;
             :binding  [
                 :boundTo  [
                     a :Existential;
                     n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g87" ];
                 :variable  [
                     n3:nodeId "file:///Users/ruben/Desktop/resto/restoG.n3#restaurant" ] ],
                     [
                 :boundTo  [
                     a :Existential;
                     n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g95" ];
                 :variable  [
                     n3:nodeId "file:///Users/ruben/Desktop/resto/restoG.n3#reservation" ] ],
                     [
                 :boundTo  [
                     a :Existential;
                     n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g88" ];
                 :variable  [
                     n3:nodeId "file:///Users/ruben/Desktop/resto/restoG.n3#outside" ] ],
                     [
                 :boundTo "12/12/12";
                 :variable  [
                     n3:nodeId "file:///Users/ruben/Desktop/resto/restoG.n3#date" ] ],
                     [
                 :boundTo  [
                     a :Existential;
                     n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g96" ];
                 :variable  [
                     n3:nodeId "file:///Users/ruben/Desktop/resto/restoG.n3#place" ] ];
             :evidence  (
             [
                     a :Extraction;
                     :because  [
                         a :Inference;
                         :binding  [
                             :boundTo "12/12/12";
                             :variable  [
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#date" ] ],
                                 [
                             :boundTo  [
                                 a :Existential;
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g90" ];
                             :variable  [
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#reservations" ] ],
                                 [
                             :boundTo  [
                                 n3:uri "http://example.org/vocab#RestAppointment" ];
                             :variable  [
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#day" ] ],
                                 [
                             :boundTo  [
                                 a :Existential;
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g91" ];
                             :variable  [
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#place" ] ],
                                 [
                             :boundTo  [
                                 a :Existential;
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g88" ];
                             :variable  [
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#outside" ] ],
                                 [
                             :boundTo  [
                                 a :Existential;
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g87" ];
                             :variable  [
                                 n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#restaurant" ] ];
                         :evidence  (
                         [
                                 a :Extraction;
                                 :because run:_g2;
                                 :gives {vocab:RestAppointment     resto:hasDate "12/12/12" .
                                } ]
                         [
                                 a :Extraction;
                                 :because  [
                                     a :Inference;
                                     :binding  [
                                         :boundTo  [
                                             a :Existential;
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g84" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#temp" ] ],
                                             [
                                         :boundTo "12/12/12";
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#date" ] ],
                                             [
                                         :boundTo  [
                                             a :Existential;
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g78" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#pressure" ] ],
                                             [
                                         :boundTo  [
                                             a :Existential;
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g79" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#pres" ] ],
                                             [
                                         :boundTo  [
                                             a :Existential;
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g72" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#location" ] ],
                                             [
                                         :boundTo  [
                                             a :Existential;
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g74" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#long" ] ],
                                             [
                                         :boundTo  [
                                             a :Existential;
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g73" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#lat" ] ],
                                             [
                                         :boundTo  [
                                             n3:uri "http://example.org/vocab#RestAppointment" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#appointment" ] ],
                                             [
                                         :boundTo "<#myAppointments>";
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#appointmentList" ] ],
                                             [
                                         :boundTo  [
                                             a :Existential;
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g83" ];
                                         :variable  [
                                             n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#temperature" ] ];
                                     :evidence  (
                                     [
                                             a :Extraction;
                                             :because run:_g3;
                                             :gives { @forSome run:_g4,
                                                        run:_g5,
                                                        run:_g6 .
                                            run:_g4     geo:lat run:_g5;
                                                 geo:long run:_g6 .
                                            } ]
                                     [
                                             a :Extraction;
                                             :because  [
                                                 a :Inference;
                                                 :binding  [
                                                     :boundTo  [
                                                         a :Existential;
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g72" ];
                                                     :variable  [
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#location" ] ],
                                                         [
                                                     :boundTo  [
                                                         a :Existential;
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g74" ];
                                                     :variable  [
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#long" ] ],
                                                         [
                                                     :boundTo  [
                                                         a :Existential;
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g73" ];
                                                     :variable  [
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#lat" ] ];
                                                 :evidence  (
                                                 [
                                                         a :Extraction;
                                                         :because run:_g3;
                                                         :gives { @forSome run:_g4,
                                                                    run:_g5,
                                                                    run:_g6 .
                                                        run:_g4     geo:lat run:_g5;
                                                             geo:long run:_g6 .
                                                        } ] );
                                                 :rule  [
                                                     a :Extraction;
                                                     :because run:_g1;
                                                     :gives { @forAll se:lat,
                                                                se:location,
                                                                se:long .
                                                    {
                                                        se:location     geo:lat se:lat;
                                                             geo:long se:long .
                                                        
                                                        }     log:implies { @forSome run:_g7 .
                                                          [      http:methodName "GET";
                                                                 http:requestURI  (
                                                                "CurrentPressure?lat="
                                                                se:lat
                                                                "&long="
                                                                se:long );
                                                                 http:resp  [
                                                                     http:body run:_g7 ] ].
                                                        se:location     meteo:pressure  [
                                                                 meteo:millibar run:_g7 ] .
                                                        } .
                                                    } ] ];
                                             :gives { @forSome run:_g4 .
                                            run:_g4     meteo:pressure  [
                                                     meteo:millibar  [
                                                     ] ] .
                                            } ]
                                     [
                                             a :Extraction;
                                             :because  [
                                                 a :Inference;
                                                 :binding  [
                                                     :boundTo  [
                                                         a :Existential;
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g72" ];
                                                     :variable  [
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#location" ] ],
                                                         [
                                                     :boundTo  [
                                                         a :Existential;
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g74" ];
                                                     :variable  [
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#long" ] ],
                                                         [
                                                     :boundTo  [
                                                         a :Existential;
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g73" ];
                                                     :variable  [
                                                         n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#lat" ] ];
                                                 :evidence  (
                                                 [
                                                         a :Extraction;
                                                         :because run:_g3;
                                                         :gives { @forSome run:_g4,
                                                                    run:_g5,
                                                                    run:_g6 .
                                                        run:_g4     geo:lat run:_g5;
                                                             geo:long run:_g6 .
                                                        } ] );
                                                 :rule  [
                                                     a :Extraction;
                                                     :because run:_g1;
                                                     :gives { @forAll se:lat,
                                                                se:location,
                                                                se:long .
                                                    {
                                                        se:location     geo:lat se:lat;
                                                             geo:long se:long .
                                                        
                                                        }     log:implies { @forSome run:_g8 .
                                                          [      http:methodName "GET";
                                                                 http:requestURI  (
                                                                "CurrentTemperature?lat="
                                                                se:lat
                                                                "&long="
                                                                se:long );
                                                                 http:resp  [
                                                                     http:body run:_g8 ] ].
                                                        se:location     meteo:temperature  [
                                                                 meteo:celsius run:_g8 ] .
                                                        } .
                                                    } ] ];
                                             :gives { @forSome run:_g4 .
                                            run:_g4     meteo:temperature  [
                                                     meteo:celsius  [
                                                     ] ] .
                                            } ]
                                     [
                                             a :Extraction;
                                             :because run:_g2;
                                             :gives {vocab:RestAppointment     resto:hasDate "12/12/12";
                                                 resto:isOn "<#myAppointments>" .
                                            } ] );
                                     :rule  [
                                         a :Extraction;
                                         :because run:_g1;
                                         :gives { @forAll se:appointment,
                                                    se:appointmentList,
                                                    se:date,
                                                    se:lat,
                                                    se:location,
                                                    se:long,
                                                    se:pres,
                                                    se:pressure,
                                                    se:temp,
                                                    se:temperature .
                                        {
                                            se:appointment     resto:hasDate se:date;
                                                 resto:isOn se:appointmentList .
                                            se:location     meteo:pressure se:pres;
                                                 meteo:temperature se:temp;
                                                 geo:lat se:lat;
                                                 geo:long se:long .
                                            se:pres     meteo:millibar se:pressure .
                                            se:temp     meteo:celsius se:temperature .
                                            
                                            }     log:implies { @forSome run:_g9,
                                                        run:_g10 .
                                              [      http:body  (
                                                    se:appointment
                                                    run:_g9
                                                    run:_g10 );
                                                     http:methodName "POST";
                                                     http:requestURI se:appointmentList;
                                                     http:resp  [
                                                         http:body se:appointment ] ].
                                            run:_g9     a resto:Restaurant;
                                                 resto:reservationList  [
                                                 ] .
                                              [      resto:isOutside run:_g10 ].
                                            se:appointment     resto:isAt run:_g9 .
                                            } .
                                        } ] ];
                                 :gives { @forSome run:_g11,
                                            run:_g12 .
                                run:_g11     resto:reservationList  [
                                     ] .
                                  [      resto:isOutside run:_g12 ].
                                } ] );
                         :rule  [
                             a :Extraction;
                             :because run:_g1;
                             :gives { @forAll se:date,
                                        se:day,
                                        se:outside,
                                        se:place,
                                        se:reservations,
                                        se:restaurant .
                            {
                                se:day     resto:hasDate se:date .
                                se:place     resto:isOutside se:outside .
                                se:restaurant     resto:reservationList se:reservations .
                                
                                }     log:implies { @forSome run:_g13 .
                                  [      http:body  (
                                        se:date
                                        se:outside );
                                         http:methodName "POST";
                                         http:requestURI se:reservations;
                                         http:resp  [
                                             http:body run:_g13 ] ].
                                run:_g13     resto:onDate se:date;
                                     resto:place  [
                                         resto:isOutside se:outside ] .
                                se:restaurant     resto:hasReservation run:_g13 .
                                } .
                            } ] ];
                     :gives { @forSome run:_g11,
                                run:_g12,
                                run:_g14,
                                run:_g15 .
                    run:_g11     resto:hasReservation run:_g14 .
                    run:_g14     resto:onDate "12/12/12";
                         resto:place run:_g15 .
                    run:_g15     resto:isOutside run:_g12 .
                    } ] );
             :gives { @forSome run:_g11,
                        run:_g12,
                        run:_g14,
                        run:_g15 .
            run:_g11     resto:hasReservation run:_g14 .
            run:_g14     resto:onDate "12/12/12";
                 resto:place run:_g15 .
            run:_g15     resto:isOutside run:_g12 .
            };
             :rule  [
                 a :Extraction;
                 :because  [
                     a :Parsing;
                     :because run:_g0;
                     :source <restoG.n3> ];
                 :gives { @forAll <restoG.n3#date>,
                            <restoG.n3#outside>,
                            <restoG.n3#place>,
                            <restoG.n3#reservation>,
                            <restoG.n3#restaurant> .
                {
                    <restoG.n3#place>     resto:isOutside <restoG.n3#outside> .
                    <restoG.n3#reservation>     resto:onDate <restoG.n3#date>;
                         resto:place <restoG.n3#place> .
                    <restoG.n3#restaurant>     resto:hasReservation <restoG.n3#reservation> .
                    
                    }     log:implies {<restoG.n3#place>     resto:isOutside <restoG.n3#outside> .
                    <restoG.n3#reservation>     resto:onDate <restoG.n3#date>;
                         resto:place <restoG.n3#place> .
                    <restoG.n3#restaurant>     resto:hasReservation <restoG.n3#reservation> .
                    } .
                } ] ].
    
    run:_g0     a :CommandLine;
         :args "['/Users/ruben/Library/Tools/cwm', 'services1.n3', 'state0alt.n3', '--think', '--filter=restoG.n3', '--why']" .
    
    run:_g1     a :Parsing;
         :because run:_g0;
         :source <services1.n3> .
    
    run:_g2     a :Parsing;
         :because run:_g0;
         :source <state0alt.n3> .
    
    run:_g3     a :Inference;
         :binding  [
             :boundTo  [
                 a :Existential;
                 n3:nodeId "file:///Users/ruben/Desktop/resto/.run-1414438712.491663p25365#_g68" ];
             :variable  [
                 n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#address" ] ];
         :evidence  (
         [
                 a :Extraction;
                 :because  [
                     a :Inference;
                     :binding  [
                         :boundTo  [
                             n3:uri "http://example.org/vocab#Bart" ];
                         :variable  [
                             n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#user" ] ],
                             [
                         :boundTo  [
                             n3:uri "http://example.org/vocab#MyDocument" ];
                         :variable  [
                             n3:nodeId "file:///Users/ruben/Desktop/resto/services1.n3#document" ] ];
                     :evidence  (
                     [
                             a :Fact;
                             :gives {vocab:Bart     log:notEqualTo vocab:Areeb .
                            } ]
                     [
                             a :Extraction;
                             :because run:_g2;
                             :gives {vocab:Bart     a <http://xmlns.com/foaf/0.1/Person> .
                            vocab:MyDocument     a <http://xmlns.com/foaf/0.1/Document> .
                            } ] );
                     :rule  [
                         a :Extraction;
                         :because run:_g1;
                         :gives { @forAll se:document,
                                    se:user .
                        {
                            se:document     a <http://xmlns.com/foaf/0.1/Document> .
                            se:user     a <http://xmlns.com/foaf/0.1/Person>;
                                 log:notEqualTo vocab:Areeb .
                            
                            }     log:implies { @forSome run:_g16 .
                              [      http:methodName "GET";
                                     http:requestURI  (
                                    se:user );
                                     http:resp  [
                                         http:body run:_g16 ] ].
                            run:_g16     a con:Address .
                            se:user     <http://xmlns.com/foaf/0.1/based_near> run:_g16 .
                            } .
                        } ] ];
                 :gives {
                  [      a con:Address ].
                } ] );
         :rule  [
             a :Extraction;
             :because run:_g1;
             :gives { @forAll se:address .
            {
                se:address     a con:Address .
                
                }     log:implies {
                  [      http:methodName "GET";
                         http:requestURI  (
                        "?location= "
                        se:address );
                         http:resp  [
                             http:body  [
                                 a geo:Point;
                                 geo:lat  [
                                 ];
                                 geo:long  [
                                 ] ] ] ].
                } .
            } ] .
    
#ENDS
